(define (square x) (* x x ))		; define the square as a function of x

(define (sum-of-squares x y)		; define the sum of squares as a function of x and y
	(+ (square x) (square y))
)

(define (abs x)				; define the absolute value as a function of x
	(cond
		((> x 0) x)
		((= x 0) 0)
		((< x 0) -x)
	)
)

; Exercise 1.3 : Define a procedure that takes three numbers as arguments and returns the sum of the squares of the two larger numbers
; Solution: There are four possible binary combinations drawn from the set (x, y, z). Therefore, we can just look for each of the four scenarios

(define (proc x y z)
	(cond
		((and (> x y) (> y z)) (sum-of-squares x y))
		((and (> x z) (> y z)) (sum-of-squares x z))
		((and (> y x) (> z x)) (sum-of-squares y z))
		((and (> z y) (> x y)) (sum-of-squares z x))
)